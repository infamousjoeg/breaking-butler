<?xml version='1.1' encoding='UTF-8'?>
<flow-definition plugin="workflow-job@2.17">
  <actions>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobAction plugin="pipeline-model-definition@1.2.7"/>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction plugin="pipeline-model-definition@1.2.7">
      <jobProperties/>
      <triggers/>
      <parameters/>
    </org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction>
  </actions>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <org.jenkinsci.plugins.workflow.job.properties.PipelineTriggersJobProperty>
      <triggers>
        <com.dabsquared.gitlabjenkins.GitLabPushTrigger plugin="gitlab-plugin@1.5.3">
          <spec></spec>
          <triggerOnPush>true</triggerOnPush>
          <triggerOnMergeRequest>true</triggerOnMergeRequest>
          <triggerOnPipelineEvent>false</triggerOnPipelineEvent>
          <triggerOnAcceptedMergeRequest>false</triggerOnAcceptedMergeRequest>
          <triggerOnClosedMergeRequest>false</triggerOnClosedMergeRequest>
          <triggerOnApprovedMergeRequest>true</triggerOnApprovedMergeRequest>
          <triggerOpenMergeRequestOnPush>never</triggerOpenMergeRequestOnPush>
          <triggerOnNoteRequest>true</triggerOnNoteRequest>
          <noteRegex>Jenkins please retry a build</noteRegex>
          <ciSkip>true</ciSkip>
          <skipWorkInProgressMergeRequest>true</skipWorkInProgressMergeRequest>
          <setBuildDescription>true</setBuildDescription>
          <branchFilterType>All</branchFilterType>
          <includeBranchesSpec></includeBranchesSpec>
          <excludeBranchesSpec></excludeBranchesSpec>
          <targetBranchRegex></targetBranchRegex>
          <secretToken>{AQAAABAAAAAQdXOw+T37FwTzVheew1G8F6AMzy5Qy3RRDiV2eE6m8Ws=}</secretToken>
        </com.dabsquared.gitlabjenkins.GitLabPushTrigger>
      </triggers>
    </org.jenkinsci.plugins.workflow.job.properties.PipelineTriggersJobProperty>
    <com.dabsquared.gitlabjenkins.connection.GitLabConnectionProperty plugin="gitlab-plugin@1.5.3">
      <gitLabConnection></gitLabConnection>
    </com.dabsquared.gitlabjenkins.connection.GitLabConnectionProperty>
  </properties>
  <definition class="org.jenkinsci.plugins.workflow.cps.CpsFlowDefinition" plugin="workflow-cps@2.45">
    <script>pipeline {
    agent any

    tools {
        maven &apos;maven3&apos;
    }
    environment {
        JAVA_HOME = "/usr/lib/jvm/java-1.8.0-openjdk-amd64"
    }
	
    stages {
		stage(&apos;Initialize Process&apos;) {
		    steps {
			    deleteDir()
		    }
		}
		stage(&apos;Checkout Source&apos;) {
		    steps {
			sh """
			summon --yaml 'SECURE_GITLAB_PASS: !var gitlab/password' sh -c \'git clone http://root:\$SECURE_GITLAB_PASS@GITLAB_URL/root/SecureDemo.git .\'
			"""
		    }
		}
        stage(&apos;Unit Test by JUnit and Cobertura&apos;) {
            steps {
                sh &quot;mvn -U clean test cobertura:cobertura -Dcobertura.report.format=xml&quot;
            }
            post {
                always {
                    junit &apos;**/target/*-reports/TEST-*.xml&apos;
                    step([$class: &apos;CoberturaPublisher&apos;, coberturaReportFile: &apos;target/site/cobertura/coverage.xml&apos;])
                }
            }
        }
        stage(&apos;Deploy to Artifactory&apos;) {
            steps {
		sh """
                summon --yaml 'SECURE_ARTIFACTORY_PASS: !var artifactory/password' sh -c \'mvn deploy -DskipTests -Dartifactory_url=http://ARTIFACTORY_USER:\${SECURE_ARTIFACTORY_PASS}@ARTIFACTORY_URL/artifactory/example-repo-local -Dv=\${BUILD_NUMBER}\'
		"""
            }
        }


        stage(&apos;Trigger CD process using Ansible&apos;) {
            steps {
                sh """
                  summon --yaml 'SECURE_AWX_PASS: !var awx/password' sh -c \' \\
                    curl -k -X POST \\
                        -u "AWX_USER:\$SECURE_AWX_PASS" \\
                        -H "Accept: application/json" \\
                        -H "Content-Type: application/json" \\
                        http://AWX_CONTAINER_IP:8052/api/v2/job_templates/AWX_TEMPLATE_ID/launch/ -d \\
                        "{\\"extra_vars\\": { \\"artifact_url\\":\\"http://ARTIFACTORY_URL/artifactory/example-repo-local/com/khoubyari/secure-spring-boot-rest-example/0.1.${BUILD_NUMBER}/secure-spring-boot-rest-example-0.1.${BUILD_NUMBER}.war\\"} }"  \\
                    \'
                """
            }
        }





    }
}</script>
    <sandbox>true</sandbox>
  </definition>
  <triggers/>
  <disabled>false</disabled>
</flow-definition>
